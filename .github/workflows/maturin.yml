name: Build golem node
on:
  workflow_dispatch:
    inputs:
      release:
        description: 'Golem Release tag (v0.15.0, pre-rel-v0.15.0-rc1)'
        required: true
      publish_artifacts:
        description: 'Publish artifacts'
        required: true
        default: 'true'

jobs:
  build:
    name: Build ${{ matrix.target }}
    continue-on-error: ${{ matrix.experimental == 1 }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - runs-on: macos-latest
            target: x86_64-apple-darwin
          - runs-on: macos-latest
            target: aarch64-apple-darwin
          - runs-on: windows-latest
            target: x86_64-pc-windows-msvc
          - runs-on: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - runs-on: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - runs-on: ubuntu-latest
            target: aarch64-unknown-linux-musl

    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v1
        with:
          repository: golemfactory/yagna
          ref: "${{ github.event.inputs.release }}"

      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
          architecture: x64
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --profile release --out dist -m Cargo.toml --features static-openssl
          manylinux: auto

      - name: Build wheels (musl)
        if: contains(matrix.target, 'musl')
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --profile release --out dist --features static-openssl
          manylinux: musllinux_1_2

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist
